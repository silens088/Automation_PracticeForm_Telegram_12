plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.16.1",
    selenideVersion = "5.24.0",
    junitVersion = "5.8.1"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.aeonbits.owner:owner:1.0.12",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties()) //строчка которую добавили для запуска из консоли (25мин ур.11)
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

//создали таску для запуска тестов с тегом properties из SystemPropertiesTest
task properties_tests(type: Test) {
    systemProperty("browserSize", System.getProperty("browserSize", "400x400")) //можно задавать на уровне груви проперти
    useJUnitPlatform {
        includeTags "properties"
    }
}

////создали таску для OwnerTests
//task properties_tests(type: Test) {
//    useJUnitPlatform {
//        includeTags "owner"
//    }
//}
//
////запуск тестов для нескольких тегов
//task many_tags_tests(type: Test) {
//    useJUnitPlatform {
//        includeTags "properties"
//        includeTags "smoke"
//        //исключить
//        excludeTags "prod"
//    }
//}